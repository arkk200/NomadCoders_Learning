let a1 = "hello" // 타입을 직접적으로 주지 않는다면 Type Checker가 타입을 추론한다.
a1 = "asdf" // 처음에 string 타입(추론한 타입)으로 정의되었기에 똑같은 string 타입 데이터가 들어갈 수 있다.
// typescript는 타입이 정의 된 변수의 타입을 다른 타입으로 바꿀 수 없다.
/*
a1 = 1
*/

// '변수 : 타입' 형태로 변수에 직접적으로 타입을 줄 수가 있다.
// 직접적으로 타입을 줬을 때 잘못된 값이 들어가면 에러가 난다.
/*
let b1 : boolean = "X"
b1 = false // 제대로 값을 주면 에러가 안 난다.
*/

/*
let c1 = [1, 2, 3]
c1.push("10") // 숫자 타입 배열에 문자열을 삽입할려고 하면 에러가 뜬다.
*/

// 빈 배열을 선언할 땐 타입을 명시적으로 표현한다.
/*
let c3 : number[] = []
c3.push("20")
*/

// 명시적 표현은 최소한으로 사용하는게 좋다. Typescript가 추론하게 하는게 낫다.

const player1 = {
    name: "nico"
}

/*
player1.name = 1 // 객체 내 변수의 타입을 바꾸거나 
player1.hello() // 존재하지 않는 메서드를 호출하면 에러가 일어난다.
*/